<Application x:Class="NetworkService.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NetworkService"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="UIPrimaryColor" Color="#434343" />
        <SolidColorBrush x:Key="UISecondaryColor" Color="#F7C873" />
        <SolidColorBrush x:Key="UITertiaryColor" Color="#FAEBCD" />
        <SolidColorBrush x:Key="UIAccentColor" Color="#F8F8F8" />
        <SolidColorBrush x:Key="UITerminalColor" Color="#181014" />
        <SolidColorBrush x:Key="UIGraphLines" Color="#bfbdbd" />

        <FontFamily x:Key="HeaderFont">
            /Resource/Fonts/HeadingFont.ttf#Beautiful Police Officer
        </FontFamily>
        <FontFamily x:Key="SubheaderFont">
            /Resource/Fonts/SubheadingFont.otf#Backtoschool
        </FontFamily>
        <FontFamily x:Key="PopupFont">
            /Resource/Fonts/PopupFont.ttf#Izayoi Monospaced
        </FontFamily>
        <FontFamily x:Key="TerminalFont">
            /Resource/Fonts/TerminalFont.ttc#Iosevka Thin
        </FontFamily>
    
        <Style x:Key="DockButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                        Storyboard.TargetProperty="(Button.Width)"
                        To="40"
                        Duration="0:0:0.3" />

                            <DoubleAnimation
                        Storyboard.TargetProperty="(Button.Height)"
                        To="40"
                        Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                        Storyboard.TargetProperty="(Button.Width)"
                        To="35"
                        Duration="0:0:0.3" />

                            <DoubleAnimation
                        Storyboard.TargetProperty="(Button.Height)"
                        To="35"
                        Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PopupStyle" TargetType="Popup">
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="VerticalOffset" Value="5" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Placement" Value="Bottom" />
        </Style>

        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="Height" Value="27" />
            <Setter Property="Background" Value="{StaticResource UISecondaryColor}" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>

        <Style x:Key="PopupTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}" />
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style x:Key="PopupTextStyleError" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}" />
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <ImageBrush
            x:Key="exit_inactive"
            ImageSource="/Resource/Images/exit_inactive.png"
            Stretch="Uniform" />
        <ImageBrush
            x:Key="exit_active"
            ImageSource="/Resource/Images/exit_active.png"
            Stretch="Uniform" />

        <Style x:Key="ExitButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="35" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{StaticResource exit_inactive}"
                            BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource exit_active}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource exit_inactive}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush 
            x:Key="undo_unavailable"
            ImageSource="/Resource/Images/undo_unavailable.png"
            Stretch="Uniform" />
        <ImageBrush 
            x:Key="undo_active"
            ImageSource="/Resource/Images/undo_active.png"
            Stretch="Uniform" />
        <ImageBrush 
            x:Key="undo_inactive"
            ImageSource="/Resource/Images/undo_inactive.png"
            Stretch="Uniform" />

        <Style x:Key="UndoButtonUnavailableStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width"  Value="35" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="No"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                            x:Name="border"
                            Background="{StaticResource undo_unavailable}" 
                            BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UndoButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="35" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{StaticResource undo_inactive}"
                            BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource undo_active}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource undo_inactive}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush 
            x:Key="back_inactive"
            ImageSource="/Resource/Images/BackInactive.png"
            Stretch="Uniform" />
        <ImageBrush 
            x:Key="back_active"
            ImageSource="/Resource/Images/BackActive.png"
            Stretch="Uniform" />

        <Style x:Key="BackButtonUnavailableStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width"  Value="35" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="No"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                           x:Name="border"
                           Background="{StaticResource back_inactive}" 
                           BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="35" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{StaticResource back_inactive}"
                            BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource back_active}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource back_inactive}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TerminalTextBox" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridNetworkEntities" TargetType="DataGrid">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGrid">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="25">
                            <ScrollViewer
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0 0 0 1"
                                        CornerRadius="25 25 0 0">
                                        <DataGridColumnHeadersPresenter Grid.Row="0" />
                                    </Border>
                                    <ItemsPresenter Grid.Row="1" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridNetworkEntitiesBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="20" />
        </Style>
        <Style x:Key="DataGridNetworkEntitiesColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="25 25 0 0">
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="15"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#F6F6F6"
                                BorderThickness="1" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"    
                                Fill="{TemplateBinding Foreground}"
                                Stroke="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 4 4 L 8 0 Z" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style x:Key="theComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="{StaticResource UIAccentColor}" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Cursor="Hand"
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="True"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />

                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                                <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup
                                    Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide">
                                    <Grid
                                        Name="DropDown"
                                        SnapsToDevicePixels="True"               
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                            CornerRadius="8"
                                            x:Name="DropDownBorder"
                                            Background="White"
                                            BorderThickness="1"
                                            BorderBrush="#F6F6F6"
                                        />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                    </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="theComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                        Name="Border"
                        Padding="5"
                        Margin="2"
                        BorderThickness="2,0,0,0"
                        CornerRadius="0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                            <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#181014"/>
                                <Setter TargetName="Border" Property="Background" Value="#D3D3D3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource UIAccentColor}" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="20, 0, 0, 0" />
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="5, 0, 0, 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="25"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Auto"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButtonStyleFilterOn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            CornerRadius="25"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" >
                                <Image x:Name="FilterOnImageButton" Source="Resource/Images/FilterOnInactive.png" Width="32" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="FilterOnImageButton" Property="Source" Value="Resource/Images/FilterOnActive.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="FilterOnImageButton" Property="Source" Value="Resource/Images/FilterOnInactive.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButtonStyleFilterOff" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                    CornerRadius="25"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" >
                                <Image x:Name="FilterOnImageButton" Source="Resource/Images/FilterOffInactive.png" Width="32" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="FilterOnImageButton" Property="Source" Value="Resource/Images/FilterOffActive.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="FilterOnImageButton" Property="Source" Value="Resource/Images/FilterOffInactive.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButtonStyleAddNew" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            CornerRadius="25"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" >
                                <Image x:Name="AddImageButton" Source="Resource/Images/AddInactive.png" Width="32" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AddImageButton" Property="Source" Value="Resource/Images/AddActive.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="AddImageButton" Property="Source" Value="Resource/Images/AddInactive.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButtonStyleDelete" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            CornerRadius="25"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" >
                                <Image x:Name="DeleteImageButton" Source="Resource/Images/DeleteInactive.png" Width="32" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="DeleteImageButton" Property="Source" Value="Resource/Images/DeleteActive.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="DeleteImageButton" Property="Source" Value="Resource/Images/DeleteInactive.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedTreeViewStyle" TargetType="TreeView">
            <Setter Property="Background" Value="{StaticResource UIAccentColor}" />
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="25"
                                Padding="2">
                            <ScrollViewer Focusable="False"
                                          Padding="{TemplateBinding Padding}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewTextBlockHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="{StaticResource PopupFont}" />
        </Style>

        <Style x:Key="TreeViewTextBlockBodyStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontFamily" Value="Book Antiqua" />
        </Style>

        <Style TargetType="Border" x:Key="RoundedBorderForNetworkDisplayGrid">
            <Setter Property="Margin" Value="10" />
            <Setter Property="CornerRadius" Value="25" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style TargetType="Image" x:Key="RoundedImageDeleteNetworkDisplay">
            <Setter Property="Width" Value="14" />
            <Setter Property="Height" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,3,10,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Clip">
                <Setter.Value>
                    <EllipseGeometry Center="7,7" RadiusX="7" RadiusY="7" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Image" x:Key="RoundedImageConnectNetworkDisplay">
            <Setter Property="Width" Value="14" />
            <Setter Property="Height" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,3,0,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Clip">
                <Setter.Value>
                    <EllipseGeometry Center="7,7" RadiusX="7" RadiusY="7" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Image" x:Key="RoundedImageAlarmWarningDisplay">
            <Setter Property="Width" Value="14" />
            <Setter Property="Height" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,3,0,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Clip">
                <Setter.Value>
                    <EllipseGeometry Center="7,7" RadiusX="7" RadiusY="7" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Image" x:Key="CenteredRoundedImageNetworkDisplay">
            
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style TargetType="Border" x:Key="RoundedTextBlockBorderNetworkDisplay">
            <Setter Property="CornerRadius" Value="15" />
            <Setter Property="Background" Value="{StaticResource UITertiaryColor}" />
            <Setter Property="Margin" Value="4" />
        </Style>

        <Style TargetType="TextBlock" x:Key="TextBlockNetworkDisplay">
            <Setter Property="Foreground" Value="{StaticResource UIPrimaryColor}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style TargetType="Border" x:Key="GraphBorderDrawingStyle">
            <Setter Property="BorderBrush" Value="{StaticResource UIGraphLines}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="{StaticResource UIAccentColor}" />
        </Style>

        <Style TargetType="Border" x:Key="RoundedTextBlockBorderGraphView">
            <Setter Property="CornerRadius" Value="15" />
            <Setter Property="Background" Value="{StaticResource UISecondaryColor}" />
            <Setter Property="Margin" Value="4" />
        </Style>

    </Application.Resources>
</Application>
